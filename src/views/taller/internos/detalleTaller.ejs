<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../../partials/AdminLTEHead.ejs') %>
  <title>REDNOR - Detalle</title>
</head>
<body class="hold-transition sidebar-mini">
  <div class="wrapper">
    <!-- Navbar -->
    <%- include('../../partials/navbar.ejs') %>
  
    <!-- Main Sidebar -->
    <%- include('../../partials/mainSidebar.ejs') %>

    <!-- Control Sidebar -->
    <%- include('../../partials/controlSidebar.ejs') %>
    <!-- MAIN -->
    <main class="content-wrapper pb-5">
      <!-- Content Header -->
      <section class="content-header">
        <div class="container-fluid">
          <div class="row">
            <div class="col text-center">
              <h1>
                <a href="/equipos/detalle/<%= ingreso.id_equipo %>">
                  <%= ingreso.equipo.marca %> <%= ingreso.equipo.modelo %> <%= ingreso.equipo.numero_serie %>
                </a>
              </h1>
            </div>
          </div>
        </div>
      </section>
      
      <!-- Content -->
      <section class="content mt-2">
        <div class="container-fluid">
          <div class="row">
            <div class="col-lg-8 m-auto">
              
              <!-- Detalles del Ingreso -->
              <div class="card">
                <div class="card-header">
                  <div class="d-flex justify-content-between align-items-baseline">
                    <div class="align-self-center">
                      <h3 class="card-title">Detalles del Ingreso</h3>
                    </div>
                    
                    <% if ([1, 2, 3].includes(ingreso.id_estado)) { %>
                      <div>
                        <a href="/taller/ingreso/<%= ingreso.id %>/editar" class="btn btn-sm btn-outline-primary">Editar</a>
                      </div>
                    <% } %>
                  </div>
                  <%# if (ingreso.id_estado == 2) { %>
                    <!-- <button type="button" class="btn btn-outline-info btn-sm float-right" id="insumosButton" data-toggle="modal" data-target="#modal-insumos">
                      Insumos
                    </button> -->
                  <%# } %>
                </div>
                <div class="card-body">
                  <!-- Informacion del Usuario -->
                  <% if (ingreso.usuario != null) { %>
                    <dt>Usuario</dt>
                    <dd><%= ingreso.usuario.nombre %> <%= ingreso.usuario.apellido %></dd>
                  <% } %>

                  <!-- Fecha de Ingreso -->
                  <dt>Fecha de Ingreso</dt>
                  <dd><%= new Date(ingreso.fecha_ingreso).toLocaleString("es-ES", {
                    year: "numeric",
                    month: "numeric",
                    day: "numeric",
                    hour: "numeric",
                    minute: "numeric",
                  }) %></dd>

                  <!-- Estado del Ingreso -->
                  <dt>Estado</dt>
                  <dd class="h5">
                    <span class="badge <%= ingreso.id_estado == 1 ? "badge-info" : 
                    ingreso.id_estado == 2 ? "badge-warning"   :
                    ingreso.id_estado == 5 || ingreso.id_estado == 7 ? "badge-success"  :
                    ingreso.id_estado == 6 ? "badge-danger"   : "badge-info" %>">
                      <%= ingreso.estado.nombre.toUpperCase() %>
                    </span>
                  </dd>

                  <!-- Motivo del Ingreso -->
                  <dt>Motivo de Ingreso</dt>
                  <dd><%= ingreso.motivo %></dd>

                  <!-- Detalle del Ingreso -->
                  <dt>Detalle</dt>
                  <dd><%= ingreso.detalle %></dd>

                  <!-- Info del Cliente -->
                  <% if (ingreso.cliente != null) { %>
                    <p class="lead mb-1">Informacion del Cliente</p>
                    <dl>
                      <dt>Cliente</dt>
                      <dd>
                        <a href="/clientes/detalle/<%= ingreso.cliente.id %>">
                          <%= ingreso.cliente.nombre %>
                          <i class="fas fa-external-link-alt"></i>
                        </a>
                      </dd>
    
                      <dt>Departamento</dt>
                      <dd><%= ingreso.departamento%></dd>
                    </dl>
                  <% } %>
                  
                  <dt>Historial de Informes</dt>
                  <dd>
                    <ul id="informes-taller" class="list-unstyled">

                    </ul>
                  </dd>
                </div>
              </div>
              <!-- /Detalles del Ingreso -->

              <!-- Timeline -->
              <% if (combinedData.length > 0) { %>
                <div class="row">
                  <div class="col">
                    <div class="timeline">
                      <div class="time-label">
                        <span class="bg-red">
                          <%= ingreso.fecha_ingreso.toLocaleDateString() %>
                        </span>
                      </div>
                      
                      <!-- Recorremos los datos combinados -->
                      <% combinedData.forEach(item => { %>
  
                        <div>
                          <% if (item.type === "informe") { %>
                            <i class="fas fa-file-alt bg-yellow"></i>
                          <% } else if (item.type === "insumo"){ %>
                            <i class="fas fa-box bg-green"></i>
                          <% } %>
                          <div class="timeline-item">
                            <span class="time"><i class="fas fa-clock"></i> 
                              <%= new Date(item.fecha).toLocaleString("es-ES", {
                                year: "numeric",
                                month: "numeric",
                                day: "numeric",
                                hour: "numeric",
                                minute: "numeric",
                              }) %>
                            </span>
                            <% if (item.type === 'informe') { %>
                              <h3 class="timeline-header"><a href="#"><%= item.nombre_usuario %></a> hizo un informe</h3>
                              <div class="timeline-body">
                                <%= item.detalle %>
                              </div>

                              <div class="timeline-footer d-flex justify-content-between">
                                <% if (!egreso) { %>
                                  <% if (locals.userLogged.id == item.id_usuario) { %>
                                    <div>
                                      <a href="/taller/informe/<%= item.id %>/editar" class="btn btn-primary btn-sm">Editar</a>
                                      
                                      <a class="btn btn-danger btn-sm" id="btn-eliminar-informe" data-toggle="modal" data-target="#modal-eliminar-informe" data-id="<%= item.id %>">Borrar</a>
                                    </div>
                                  <% } %>
                                  <% if (item.type == "informe") { %>
                                   <% if (item.pedido_insumos === true && ingreso.id_estado === 2) { %>
                                    <a href="/taller/<%= item.id %>/insumos/crear" class="btn btn-info btn-sm ">Entregar Insumos</a>
                                   <% } %>
                                  <% } %>
                                <% } %>
                              </div>

                            <% } else if (item.type == 'insumo') { %>
                              <h3 class="timeline-header"><a href="#"><%= item.nombre_usuario %></a> entrega de insumos</h3>
                              <div class="timeline-body">
                                <%= item.observacion %>
                              </div>
                              <div class="timeline-footer">
                                <p class="text-info">Nro de Remito: <%= item.nro_remito %></p>
                              </div>
                            <% } %>
                          </div>
                        </div>
                      <% }) %>
                    </div>
                  </div>
                </div>
              <% } %>
              <!-- /Timeline -->

              <!-- Detalles del Egreso -->
              <% if (egreso) { %>
               <div class="card">
                <div class="card-header">
                  <h3 class="card-title">Detalles del Egreso</h3>
                </div>
                <div class="card-body">
                  <!-- Informacion del Usuario -->
                  <% if (egreso.usuario != null) { %>
                    <dt>Usuario</dt>
                    <dd><%= egreso.usuario.nombre %> <%= egreso.usuario.apellido %></dd>
                  <% } %>
                  <!-- Fecha de Egreso -->
                  <dt>Fecha de Egreso</dt>
                  <dd><%= new Date(egreso.fecha_egreso).toLocaleString("es-ES", {
                    year: "numeric",
                    month: "numeric",
                    day: "numeric",
                    hour: "numeric",
                    minute: "numeric",
                  }) %></dd>

                  <!-- Detalles de la Reparacion -->
                  <dt>Detalles de la Reparacion</dt>
                  <dd><%= egreso.detalle %></dd>

                  <!-- Observaciones -->
                  <% if (egreso.observacion) { %>
                   <dt>Observaciones</dt>
                   <dd><%= egreso.observacion %></dd>
                  <% } %>

                  <!-- Costo -->
                  <!-- <dt>Costo</dt>
                  <dd>$<%# egreso.costo %></dd> -->
                </div>
               </div>
              <% } %>

              <!-- Botones -->
              <% if (!egreso) { %>
               <div class="d-flex justify-content-between">
                <!-- Boton Agregar Informe -->
                <a href="/taller/informe/<%= ingreso.id %>" class="btn btn-outline-primary">Agregar Informe</a>

                <a href="/taller/egreso/<%= ingreso.id %>" class="btn btn-outline-success">Informar Egreso</a>
               </div>
              <% } %>

              <!-- Ir al listado -->
              <a href="/taller" class="btn btn-block btn-outline-secondary mt-3">Ir al listado</a>

              <!-- Boton para Eliminar -->
              <button type="button" data-toggle="modal" data-target="#modal-eliminar-ingreso" class="btn btn-block btn-outline-danger mt-3">Eliminar este registro</button>
              <!-- /Botones -->
            </div>
          </div>
        </div>
      </section>
    </main>
    <!-- FIN MAIN -->

    <!-- Modal para mostrar el detalle de Taller -->
    <div class="modal fade" id="modal-detalle-taller">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title">Detalle de Taller</h4>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>

          <div class="modal-body" id="detalle-taller">
            <p>Detalle de Taller</p>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal Eliminar un Informe -->
    <div class="modal fade" id="modal-eliminar-informe">
      <div class="modal-dialog">
        <div class="modal-content">
          <!-- Header -->
          <div class="modal-header">
            <h4 class="modal-title">Borrar Informe</h4>
          </div>
          <!-- Body -->
          <div class="modal-body">
            <p>¿Estas seguro que quieres borrar este informe?</p>
          </div>
          <!-- Footer -->
            <div class="modal-footer justify-content-between">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>

            <button type="button" class="btn btn-danger" id="btn-modal-eliminar-informe">Borrar</button>
            </div>
        </div>
      </div>
    </div>

    <!-- Modal Eliminar Ingreso -->
    <div class="modal fade" id="modal-eliminar-ingreso">
      <div class="modal-dialog">
        <div class="modal-content">
          <!-- Header -->
          <div class="modal-header">
            <h4 class="modal-title">Borrar Registro</h4>
          </div>
          <!-- Body -->
          <div class="modal-body">
            <p>¿Estas seguro que quieres borrar este registro?</p>
          </div>
          <!-- Footer -->
          <div class="modal-footer justify-content-between">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            
            <button type="button" class="btn btn-outline-danger" id="btn-modal-eliminar-ingreso">Borrar</button>
          </div>
        </div>
      </div>
    </div>

  </div>

  <%- include('../../partials/AdminLTEScripts.ejs') %>
  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      console.log("Script cargado");

      // Capturar el ID del Equipo
      const idEquipo = "<%= ingreso.equipo.id %>";

      // Capturar la Fecha del Ingreso
      const fechaIngreso = "<%= new Date(ingreso.fecha_ingreso).toISOString() %>";  // Guardar en formato ISO
      // console.log(`%cFecha de Ingreso: ${fechaIngreso}`, "color: red");

      // Crear un Objeto Literal con el ID del Equipo y la Fecha de Ingreso
      const data = {
        id_equipo: idEquipo,
        fecha_ingreso: fechaIngreso,
      };
      
      // Funcion fetch para obtener el historial de Ingresos
      const fetchHistorialTaller = async (id) => {
        try {
          const response = await fetch(`/taller/historial-taller`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            // Enviar los datos en el body de la peticion
            body: JSON.stringify(data),
          });

          if (!response.ok) {
            throw new Error("Error al obtener el historial");
          }

          return await response.json();
        } catch (error) {
          console.error(error);
        }
      }

      // Funcion fetch para obtener el detalle de un Ingreso(a traves del ID del mismo Ingreso)
      const fetchDetalleTaller = async (id) => {
        try {
          const response = await fetch(`/taller/detalle-taller/${id}`)

          if (!response.ok) { 
            throw new Error("Error al obtener el Detalle del Ingreso");
          }

          return await response.json();
        } catch (error) {
          console.error(error);
        }
      }

      // Funcion para mostrar el historial de Ingresos
      const mostrarHistorial = (ingresos) => {
        // Capturar el elemento ul
        const ulInformes = document.getElementById("informes-taller");

        // Limpiar el contenido del elemento ul
        ulInformes.innerHTML = "";

        if (!ingresos.length > 0) {
          const li = document.createElement("li");
          li.textContent = "No hay informes para mostrar";
          ulInformes.appendChild(li);
        }
        
        // Recorrer los ingresos y agregar al listado
        ingresos.forEach(ingreso => {
          const li = document.createElement("li");
          const a = document.createElement("a");

          a.textContent = `${new Date(ingreso.fecha_ingreso).toLocaleDateString()} - ${ingreso.motivo}`;
          a.classList.add("linkIngreso");
          a.href = "#detalle-taller";

          a.addEventListener("click", async (e) => {
            // Prevenir el comportamiento por defecto
            e.preventDefault();

            // Mostrar el modal
            $("#modal-detalle-taller").modal("show");

            // Obtener el detalle del Ingreso
            const data = await fetchDetalleTaller(ingreso.id);
            console.log(data);

            // Capturar el body del modal para mostrar la información
            const modalDetalle = document.getElementById("detalle-taller")

            // Limpiar el contenido del body
            modalDetalle.innerHTML = "";

            // Ingreso
            if (data.ingreso) {
              // Crear un card para mostrar la informacion del Ingreso
              const cardIngreso = document.createElement("div");
              cardIngreso.classList.add("card");
  
              const cardBodyIngreso = document.createElement("div");
              cardBodyIngreso.classList.add("card-body");
              
              const dlIngreso = document.createElement("dl");

              if (data.ingreso.usuario != null) {
                dlIngreso.innerHTML += `
                  <dt>Usuario</dt>
                  <dd>${data.ingreso.usuario.nombre} ${data.ingreso.usuario.apellido}</dd>
                `
              }
  
              dlIngreso.innerHTML += `
                <dt>Fecha de Ingreso</dt>
                <dd>${new Date(data.ingreso.fecha_ingreso).toLocaleString("es-ES", {
                  year: "numeric",
                  month: "numeric",
                  day: "numeric",
                  hour: "numeric",
                  minute: "numeric",
                })}</dd>
  
                <dt>Estado</dt>
                <dd>${data.ingreso.estado.nombre}</dd>
  
                <dt>Motivo</dt>
                <dd>${data.ingreso.motivo}</dd>
  
                <dt>Detalle</dt>
                <dd>${data.ingreso.detalle}</dd>
                
                <p class="lead mb-0">Informacion del Equipo</p>
                
                <dt>Marca</dt>
                <dd>${data.ingreso.equipo.marca}</dd>
  
                <dt>Modelo</dt>
                <dd>${data.ingreso.equipo.modelo}</dd>
  
                <dt>Numero de Serie</dt>
                <dd>${data.ingreso.equipo.numero_serie}</dd>
              `
  
              cardBodyIngreso.appendChild(dlIngreso);
              cardIngreso.appendChild(cardBodyIngreso);
              modalDetalle.appendChild(cardIngreso);
            }
            
            // Informes e Insumos
            if (data.combinedData.length > 0) {
              const divRow = document.createElement("div");
              divRow.classList.add("row");
              modalDetalle.appendChild(divRow);

              const divCol = document.createElement("div");
              divCol.classList.add("col");
              divRow.appendChild(divCol);

              const divTimeline = document.createElement("div");
              divTimeline.classList.add("timeline");
              divCol.appendChild(divTimeline);

              const divTimeLabel = document.createElement("div");
              divTimeLabel.classList.add("time-label");
              divTimeline.appendChild(divTimeLabel);

              const spanBgRed = document.createElement("span");
              spanBgRed.classList.add("bg-red");
              spanBgRed.textContent = new Date(data.ingreso.fecha_ingreso).toLocaleDateString();
              divTimeLabel.appendChild(spanBgRed);

              // Recorrer el vector dataCombined
              data.combinedData.forEach((item) => {

                if (item.type == "informe") {
                  // Si el item es un Informe
                  const divInforme = document.createElement("div");
                  divInforme.classList.add("time-label");

                  divInforme.innerHTML = `
                    <i class="fas fa-file-alt bg-yellow"></i>
                    <div class="timeline-item">
                      <span class="time"><i class="fas fa-clock"></i>${new Date(item.fecha).toLocaleString("es-ES", {
                        year: "numeric",
                        month: "numeric",
                        day: "numeric",
                        hour: "numeric",
                        minute: "numeric",
                      })}</span>
                      <h3 class="timeline-header"><a href="#">${item.nombre_usuario}</a> hizo un informe</h3>
                      <div class="timeline-body">
                        <p>${item.detalle}</p>
                      </div>
                    </div>
                  `
                  // Agregar el item Informe al Timeline
                  divTimeline.appendChild(divInforme);
                } else {
                  // Si el item es un Insumo
                  const divInsumo = document.createElement("div");
                  divInsumo.classList.add("time-label");

                  divInsumo.innerHTML = `
                    <i class="fas fa-box bg-green"></i>
                    <div class="timeline-item">
                      <span class="time"><i class="fas fa-clock"></i>${new Date(item.fecha).toLocaleString("es-ES", {
                        year: "numeric",
                        month: "numeric",
                        day: "numeric",
                        hour: "numeric",
                        minute: "numeric",
                      })}</span>
                      <h3 class="timeline-header"><a href="#">${item.nombre_usuario}</a> entrega de insumos</h3>
                      <div class="timeline-body">
                        <p>${item.observacion}</p>
                      </div>
                      <div class="timeline-footer">
                        <p class="text-info">Nro. Remito: ${item.nro_remito}</p>
                      </div>
                    </div>
                  `

                  // Agregar el item Insumo al Timeline
                  divTimeline.appendChild(divInsumo);
                }
              })
            }

            // Egreso
            if (data.egreso) {
              // Crear un card para mostrar la informacion del Egreso
              const cardEgreso = document.createElement("div");
              cardEgreso.classList.add("card");
  
              const cardBodyEgreso = document.createElement("div");
              cardBodyEgreso.classList.add("card-body");
              
              const dlEgreso = document.createElement("dl");

              if (data.egreso.usuario != null) {
                dlEgreso.innerHTML += `
                  <dt>Usuario</dt>
                  <dd>${data.egreso.usuario.nombre} ${data.egreso.usuario.apellido}</dd>
                `
              }
  
              dlEgreso.innerHTML += `
                <dt>Fecha de Egreso</dt>
                <dd>${new Date(data.egreso.fecha_egreso).toLocaleString("es-ES", {
                  year: "numeric",
                  month: "numeric",
                  day: "numeric",
                  hour: "numeric",
                  minute: "numeric",
                })}</dd>
  
                <dt>Detalle</dt>
                <dd>${data.egreso.detalle}</dd>
              `
              if (data.egreso.observacion) {
                dlEgreso.innerHTML += `
                  <dt>Observaciones</dt>
                  <dd>${data.egreso.observacion}</dd>
                `;
              }

              if (data.egreso.forma_pago && data.egreso.forma_pago.nombre) {
                dlEgreso.innerHTML += `
                  <dt>Forma de Pago</dt>
                  <dd>${data.egreso.forma_pago.nombre}</dd>
                `;
              }
  
              if (data.egreso.precio) {
                dlEgreso.innerHTML += `
                  <dt>Precio</dt>
                  <dd>$${formatearPrecio(data.egreso.precio)}</dd>
                `;
              }
  
              if (data.egreso.fecha_cobro) {
                dlEgreso.innerHTML += `
                <dt>Fecha de Cobro</dt>
                <dd>${new Date(data.egreso.fecha_cobro).toLocaleString("es-ES", {
                  year: "numeric",
                  month: "numeric",
                  day: "numeric",
                  hour: "numeric",
                  minute: "numeric",
                })}</dd>
                `;
              }
  
              cardBodyEgreso.appendChild(dlEgreso);
              cardEgreso.appendChild(cardBodyEgreso);
              modalDetalle.appendChild(cardEgreso);
            }
          })

          li.appendChild(a);
          ulInformes.appendChild(li);
        });
      };

      // Convoco a la funcion fetch
      const ingresos = await fetchHistorialTaller(idEquipo);

      // Muestro el historial en la lista
      mostrarHistorial(ingresos);
    })
  </script>

  <!-- Script para eliminar un informe -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const btnEliminarInforme = document.querySelectorAll("#btn-eliminar-informe");

      const btnModalEliminarInforme = document.getElementById("btn-modal-eliminar-informe");

      let idInformeABorrar;

      // Asignar el ID del Informe a borrar al boton del modal.
      btnEliminarInforme.forEach( btn => {
        btn.addEventListener("click", (e) => {
          idInformeABorrar = e.target.dataset.id;
          console.log("ID del Informe a Borrar: ", idInformeABorrar);
        })

        btnModalEliminarInforme.addEventListener("click", async () => {
          try {
            const response = await fetch(`/taller/informe/${idInformeABorrar}/eliminar`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
            })

            if (!response.ok) {
              throw new Error("Error al eliminar el informe");
            }

            const data = await response.json();
            // console.log(data);
            // Mostrar mensaje
            // alert(data.message);
            // Recargar la pagina
            location.reload();
          } catch (error) {
            console.error(error);
            alert("Ocurrio un error al intentar eliminar el informe.")
          }
        })
      })
    })
  </script>

  <!-- Script para Eliminar registro de Ingreso -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      console.log("Script para eliminar un registro de ingreso conectado.");

      const id = "<%= ingreso.id %>";
      console.log("ID Ingreso: ", id);

      const btnModalEliminarIngreso = document.getElementById("btn-modal-eliminar-ingreso");
      console.log(btnModalEliminarIngreso);

      btnModalEliminarIngreso.addEventListener("click", async () => {
        const data = await fetchEliminarIngreso(id);

        if (data) {
          console.log(data);
          // Mostrar mensaje de confirmacion
          alert(data.message);
          // Redireccionar al listado
          window.location.href = "/taller";
        } else {
          console.error(data);
          alert(data.message);
        }
      })

      // Funcion Fetch para eliminar el registro
      const fetchEliminarIngreso = async (id) => {
        try {
          const response = await fetch(`/taller/${id}/eliminar-registro`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (!response.ok) {
            throw new Error("Error al eliminar el registro");
          }

          return await response.json();
        } catch (error) {
          console.error(error);
        }
      };
      
      
    })
  </script>
</body>
</html>
