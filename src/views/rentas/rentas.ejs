<!DOCTYPE html>
<html lang="es">

<head>
  <%- include('../partials/AdminLTEHead.ejs') %>
  <%- include('../partials/AdminLTEHeadTables.ejs') %>
  <title>REDNOR - Rentas</title>
  <style>
    .steps-container {
      padding: 2rem;
      background: #f8f9fa;
      border-radius: 8px;
      margin-bottom: 1rem;
    }

    .steps {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 800px;
      margin: 0 auto;
      position: relative;
    }

    .step {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.5rem;
      z-index: 1;
    }

    .step-icon {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background: #fff;
      display: flex;
      align-items: center;
      justify-content: center;
      border: 2px solid #ddd;
      transition: all 0.3s ease;
      font-size: 1.25rem;
      color: #6c757d;
    }

    .step.completed .step-icon {
      background: #28a745;
      border-color: #28a745;
      color: white;
    }

    .step-line {
      position: absolute;
      top: 25px;
      left: 60px;
      right: 60px;
      height: 2px;
      background: #ddd;
      z-index: 0;
    }

    .step-button {
      padding: 0.375rem 0.75rem;
      border: none;
      border-radius: 4px;
      background: #007bff;
      color: white;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .step-button:hover {
      background: #0056b3;
    }

    .step-button:disabled {
      background: #6c757d;
      cursor: not-allowed;
    }

    .progress {
      height: 20px;
      margin-bottom: 15px;
    }

    .progress-bar {
      transition: width 0.3s ease;
    }
  </style>
</head>

<body class="hold-transition sidebar-mini">
  <div class="wrapper">
    <!-- Navbar -->
    <%- include('../partials/navbar.ejs') %>

      <!-- Main Sidebar -->
      <%- include('../partials/mainSidebar.ejs') %>

        <!-- Control Sidebar -->
        <%- include('../partials/controlSidebar.ejs') %>

          <div class="content-wrapper p-3">
            <section class="content">
              <!-- Add automation link/button at the top -->
              <div class="container-fluid mb-3">
                <div class="row">
                  <div class="col-12">
                    <div class="float-right">
                      <a href="/automation" class="btn btn-info">
                        <i class="fas fa-robot"></i> Automatización de Retenciones
                      </a>
                    </div>
                  </div>
                </div>
              </div>

              <div class="steps-container">
                <div class="steps">
                  <div class="step-line"></div>

                  <div class="step" id="step1">
                    <div class="step-icon">
                      <i class="fas fa-cloud"></i>
                    </div>
                    <button class="step-button" onclick="openModal()">Cargar lista de retenciones</button>
                  </div>

                  <div class="step" id="step2">
                    <div class="step-icon">
                      <i class="fas fa-database"></i>
                    </div>
                    <button class="step-button" onclick="openRentasModal()">Descargar retenciones pdf</button>
                  </div>

                  <div class="step" id="step3">
                    <div class="step-icon">
                      <i class="fas fa-cogs"></i>
                    </div>
                    <button class="step-button" onclick="testAPI(3)">Primera carga combinada</button>
                  </div>

                  <div class="step" id="step4">
                    <div class="step-icon">
                      <i class="fas fa-check"></i>
                    </div>
                    <button class="step-button" onclick="testAPI(4)">Test API 4</button>
                  </div>
                </div>
              </div>



              <div class="container-fluid">
                <div class="row">
                  <div class="col-12">
                    <div class="card mt-4">
                      <div class="card-header bg-light">
                        <div class="row align-items-center">
                          <div class="col-md-6">
                            <form id="searchForm">
                              <div class="form-group row mb-0">
                                <label class="col-sm-2 col-form-label">Desde:</label>
                                <div class="col-sm-4">
                                  <input type="date" class="form-control" name="desde" value="" placeholder="">
                                  <script>
                                    document.addEventListener('DOMContentLoaded', function () {
                                      var today = new Date();
                                      var yyyy = today.getFullYear();
                                      var mm = "01";
                                      var dd = "01";

                                      document.querySelector('input[name="desde"]').value = yyyy + '-' + mm + '-' + dd;
                                      document.querySelector('input[name="desde"]').setAttribute('placeholder', dd + '/' + mm + '/' + yyyy);
                                    });
                                  </script>
                                </div>
                              </div>
                            </form>
                          </div>
                          <div class="col-md-6">
                            <div class="form-group row mb-0">
                              <label class="col-sm-2 col-form-label">Hasta:</label>
                              <div class="col-sm-4">
                                <input type="date" class="form-control" name="hasta"
                                  value="<?php echo date('Y-m-d'); ?>" data-date-format="dd/mm/yyyy">
                                <script>
                                  document.addEventListener('DOMContentLoaded', function () {
                                    // Set today's date in dd/mm/yyyy format for display
                                    var today = new Date();
                                    var dd = String(today.getDate()).padStart(2, '0');
                                    var mm = String(today.getMonth() + 1).padStart(2, '0');
                                    var yyyy = today.getFullYear();

                                    // Format for the value attribute needs to be YYYY-MM-DD
                                    document.querySelector('input[name="hasta"]').value = yyyy + '-' + mm + '-' + dd;

                                    // Show formatted date to user
                                    document.querySelector('input[name="hasta"]').setAttribute('placeholder', dd + '/' + mm + '/' + yyyy);
                                  });
                                </script>
                              </div>
                              <div class="col-sm-4">
                                <button type="button" class="btn btn-primary" id="searchBtn">Buscar</button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="card-body">
                        <div class="table-responsive">
                          <table class="table table-striped">
                            <thead>
                              <tr>
                                <th>N° <button class="sort-btn" data-column="Nº_Comprobante" data-order="asc"><i
                                      class="fas fa-sort fa-8xs" style="border: none;"></i></button></th>
                                <th>Cuit <button class="sort-btn" data-column="Cuit_Cuil" data-order="asc"><i
                                      class="fas fa-sort fa-2xs" style="border: none;"></i></button></th>
                                <th>Fecha <button class="sort-btn" data-column="Fecha" data-order="asc"><i
                                      class="fas fa-sort fa-2xs" style="border: none;"></i></button></th>
                                <th>Neto Fact. <button class="sort-btn" data-column="Neto_Facturado" data-order="asc"><i
                                      class="fas fa-sort fa-2xs" style="border: none;"></i></button></th>
                                <th>Total Calculado <button class="sort-btn" data-column="Total_Calculado"
                                    data-order="asc"><i class="fas fa-sort fa-2xs" style="border: none;"></i></button>
                                </th>
                                <th>Total Retenido <button class="sort-btn" data-column="Total_Retenido"
                                    data-order="asc"><i class="fas fa-sort fa-2xs" style="border: none;"></i></button>
                                </th>
                                <th>Estado <button class="sort-btn" data-column="Estado" data-order="asc"><i
                                      class="fas fa-sort fa-2xs" style="border: none;"></i></button></th>
                                <th>Imprimir</th>
                                <!--<th>Imprimir 2</th>-->
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td>444121</td>
                                <td>30999164990</td>
                                <td>31/05/2024</td>
                                <td>24900.00</td>
                                <td>747.00</td>
                                <td>747.00</td>
                                <td><span class="badge badge-success">ACTIVO</span></td>
                                <td><button class="btn btn-sm btn-default"><i class="fas fa-print"></i></button></td>
                                <!-- <td><button class="btn btn-sm btn-default"><i class="fas fa-print"></i></button></td> -->
                              </tr>
                              <tr>
                                <td>423191</td>
                                <td>30999164990</td>
                                <td>31/05/2024</td>
                                <td>21029.75</td>
                                <td>630.89</td>
                                <td>630.89</td>
                                <td><span class="badge badge-success">ACTIVO</span></td>
                                <td><button class="btn btn-sm btn-default"><i class="fas fa-print"></i></button></td>
                                <!-- <td><button class="btn btn-sm btn-default"><i class="fas fa-print"></i></button></td> -->
                              </tr>
                            </tbody>
                          </table>
                        </div>
                        <!-- Contenedor para los botones de paginación -->
                        <div id="paginationControls" class="my-2">
                          <!-- Se completará dinámicamente desde JavaScript -->
                        </div>
                        <div class="text-muted small mt-2">
                          <i class="fas fa-keyboard"></i> Navegación por teclado: <kbd>Ctrl</kbd> + <kbd>←</kbd> /
                          <kbd>→</kbd> para paginación
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
  </div>

  <div class="modal fade" id="modal-rentas">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Descargar Retenciones</h4>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="rentasForm">
            <div class="form-group">
              <label for="Desde2">Desde:</label>
              <input type="date" class="form-control" id="Desde2" name="Desde2" required>
            </div>
            <div class="form-group">
              <label for="Hasta2">Hasta:</label>
              <input type="date" class="form-control" id="Hasta2" name="Hasta2" required>
            </div>
            <div class="form-group">
              <label for="CUIT2">CUIT:</label>
              <input type="number" class="form-control" id="CUIT2" name="CUIT2" required>
            </div>
            <div class="form-group">
              <label for="password">Contraseña:</label>
              <input type="password" class="form-control" id="password" name="password" required>
            </div>
          </form>
          <div class="progress" style="display: none;">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0"
              aria-valuemin="0" aria-valuemax="100"></div>
          </div>
          <div id="statusMessages" style="display: none;"></div>
        </div>
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
          <button type="button" class="btn btn-primary" id="executeBtn" onclick="executeRentasAPI()">Ejecutar</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="modal-default">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Actualizar retenciones</h4>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="apiForm">
            <div class="form-group">
              <label for="Desde">Desde:</label>
              <input type="date" class="form-control" id="Desde" name="Desde" required
                onchange="splitDate('Desde', 'AnoD', 'MesD', 'DiaD')">
            </div>
            <div class="form-group">
              <label for="Hasta">Hasta:</label>
              <input type="date" class="form-control" id="Hasta" name="Hasta" required
                onchange="splitDate('Hasta', 'AnoH', 'MesH', 'DiaH')">
            </div>
            <div class="form-group">
              <label for="CUIT">CUIT:</label>
              <input type="number" class="form-control" id="CUIT" name="CUIT" required>
            </div>
            <input type="hidden" id="AnoD" name="AnoD">
            <input type="hidden" id="MesD" name="MesD">
            <input type="hidden" id="DiaD" name="DiaD">
            <input type="hidden" id="AnoH" name="AnoH">
            <input type="hidden" id="MesH" name="MesH">
            <input type="hidden" id="DiaH" name="DiaH">
          </form>
        </div>
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="executeAPI()">Execute</button>
        </div>
      </div>
      <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
  </div>
  <!-- /.modal -->

  <!-- Modal for Test API 3 -->
  <div class="modal fade" id="modal-api3">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Test API 3 - Combined Operations</h4>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="card">
            <div class="card-body">
              <form id="combinedForm">
                <div class="form-group">
                  <label for="Desde3">Desde:</label>
                  <input type="date" class="form-control" id="Desde3" name="Desde" required
                    onchange="splitDate('Desde3', 'AnoD3', 'MesD3', 'DiaD3')">
                </div>
                <div class="form-group">
                  <label for="Hasta3">Hasta:</label>
                  <input type="date" class="form-control" id="Hasta3" name="Hasta" required
                    onchange="splitDate('Hasta3', 'AnoH3', 'MesH3', 'DiaH3')">
                </div>
                <div class="form-group">
                  <label for="CUIT3">CUIT:</label>
                  <input type="number" class="form-control" id="CUIT3" name="CUIT" required>
                </div>
                <div class="form-group">
                  <label for="password3">Contraseña:</label>
                  <input type="password" class="form-control" id="password3" name="password" required>
                </div>
                <input type="hidden" id="AnoD3" name="AnoD">
                <input type="hidden" id="MesD3" name="MesD">
                <input type="hidden" id="DiaD3" name="DiaD">
                <input type="hidden" id="AnoH3" name="AnoH">
                <input type="hidden" id="MesH3" name="MesH">
                <input type="hidden" id="DiaH3" name="DiaH">
              </form>
              <div class="progress mt-3" style="display: none;">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"></div>
              </div>
              <div id="statusMessages3" class="mt-3"></div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="executeCombinedAPIs()">Execute Both APIs</button>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/AdminLTEScripts.ejs') %>
  <%- include('../partials/AdminLTEScriptsTables.ejs') %>

  <script>
    function splitDate(inputId, yearId, monthId, dayId) {
      const date = document.getElementById(inputId).value;
      const [year, month, day] = date.split('-');
      document.getElementById(yearId).value = year;
      document.getElementById(monthId).value = month;
      document.getElementById(dayId).value = day;
    }
  </script>

  <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
  <script
    src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
  <script>
    $(document).ready(function () {
      $('.datepicker').datepicker({
        format: 'dd/mm/yyyy',
        autoclose: true,
        todayHighlight: true
      });
    });
  </script>



  <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> -->
  <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script> -->
  <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/admin-lte/3.2.0/js/adminlte.min.js"></script> -->
  <script src="/js/rentas.js"></script>
  <script src="/js/rentasretenciones.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      console.info("rentas script")
    })
  </script>

      <!-- Script que hace los fetch a la API del servidor -->
      <script>
        function openModal() {
          $('#modal-default').modal('show');
        }

        function executeAPI() {
          const form = document.getElementById('apiForm');
          const formData = new FormData(form);
          const params = new URLSearchParams(formData).toString();

          fetch(`http://192.168.1.36:8000/URL?${params}`, {
            method: 'GET',
            headers: {
              'Accept': 'application/json',
              'Access-Control-Allow-Origin': 'http://localhost:8000',
              'Access-Control-Allow-Credentials': 'true'
            }
          })
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to fetch data from API');
              }
              return response.json();
            })
            .then(data => {
              console.log('API response:', data);
              $('#modal-default').modal('hide');
              document.querySelector('#step1 .step-icon').style.backgroundColor = '#28a745';
              document.querySelector('#step1 .step-icon').style.borderColor = '#28a745';
              document.querySelector('#step1 .step-icon').style.color = 'white';
            })
            .catch(error => {
              console.error('Error in fetch:', error);
            });
        }

        function testAPI(step) {
          if (step === 3) {
            $('#modal-api3').modal('show');
            return;
          }
          const button = document.querySelector(`#step${step} button`);
          button.disabled = true;
          button.innerHTML = 'Testing...';

          // Simulate API call
          setTimeout(() => {
            document.querySelector(`#step${step}`).classList.add('completed');
            button.innerHTML = 'Completed';
          }, 1500);
        }

        function openRentasModal() {
          const fromDate = document.querySelector('input[name="desde"]').value;
          const toDate = document.querySelector('input[name="hasta"]').value;

          document.getElementById('Desde2').value = fromDate;
          document.getElementById('Hasta2').value = toDate;

          document.getElementById('statusMessages').style.display = 'none';

          $('#modal-rentas').modal('show');
        }

        function executeRentasAPI() {
          // Get form values
          const desde = document.getElementById('Desde2').value;
          const hasta = document.getElementById('Hasta2').value;
          const usuario = document.getElementById('CUIT2').value;
          const password = document.getElementById('password').value;

          // Format dates from YYYY-MM-DD to DD/MM/YYYY
          const formatDate = (dateStr) => {
            const [year, month, day] = dateStr.split('-');
            return `${day}/${month}/${year}`;
          };

          // Build query parameters with correct format
          const params = new URLSearchParams({
            desde: formatDate(desde),
            hasta: formatDate(hasta),
            usuario: usuario,
            password: password
          }).toString();

          // 192.168.1.36
          fetch(`http://192.168.1.36:8000/NewRentas?${params}`, {
            method: 'GET',
            headers: {
              'Accept': 'application/json',
              'Access-Control-Allow-Origin': '*'
            }
          })
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to fetch data from API');
              }
              return response.json();
            })
            .then(data => {
              console.log('API response:', data);
              $('#modal-rentas').modal('hide');
              document.querySelector('#step2 .step-icon').style.backgroundColor = '#28a745';
              document.querySelector('#step2 .step-icon').style.borderColor = '#28a745';
              document.querySelector('#step2 .step-icon').style.color = 'white';
            })
            .catch(error => {
              console.error('Error in fetch:', error);
            });
        }

        async function executeCombinedAPIs() {
          const statusMessages = document.getElementById('statusMessages3');
          const progressBar = document.querySelector('#modal-api3 .progress');
          const progressBarFill = document.querySelector('#modal-api3 .progress-bar');
          const executeBtn = document.querySelector('#modal-api3 .btn-primary');

          statusMessages.style.display = 'block';
          progressBar.style.display = 'block';
          executeBtn.disabled = true;

          // Get common form values
          const desde = document.getElementById('Desde3').value;
          const hasta = document.getElementById('Hasta3').value;
          const cuit = document.getElementById('CUIT3').value;
          const password = document.getElementById('password3').value;

          const formatDate = (dateStr) => {
            const [year, month, day] = dateStr.split('-');
            return `${day}/${month}/${year}`;
          };

          try {
            // Execute first API
            statusMessages.innerHTML = '<div class="alert alert-info">Ejecutando API 1...</div>';
            progressBarFill.style.width = '25%';

            const formData = new FormData(document.getElementById('combinedForm'));
            const params1 = new URLSearchParams(formData).toString();

            const response1 = await fetch(`http://192.168.1.36:8000/URL?${params1}`, {
              method: 'GET',
              headers: {
                'Accept': 'application/json',
                'Access-Control-Allow-Origin': 'http://localhost:8000',
                'Access-Control-Allow-Credentials': 'true'
              }
            });

            if (!response1.ok) throw new Error('Failed in API 1');

            progressBarFill.style.width = '50%';
            statusMessages.innerHTML += '<div class="alert alert-success">API 1 completada exitosamente</div>';

            // Update search dates and trigger search after API 1
            document.querySelector('input[name="desde"]').value = desde;
            document.querySelector('input[name="hasta"]').value = hasta;
            document.getElementById('searchBtn').click();

            // Execute second API
            statusMessages.innerHTML += '<div class="alert alert-info">Ejecutando API 2 - Descargando PDFs...</div>';
            progressBarFill.style.width = '75%';

            const params2 = new URLSearchParams({
              desde: formatDate(desde),
              hasta: formatDate(hasta),
              usuario: cuit,
              password: password
            }).toString();

            const response2 = await fetch(`http://192.168.1.36:8000/NewRentas?${params2}`, {
              method: 'GET',
              headers: {
                'Accept': 'application/json',
                'Access-Control-Allow-Origin': '*'
              }
            });

            if (!response2.ok) throw new Error('Failed in API 2');

            // Parse response to get downloaded files information
            const data2 = await response2.json();
            if (data2.success && data2.downloaded_files) {
              statusMessages.innerHTML += `<div class="alert alert-success">API 2 completada: ${data2.downloaded_files.length} archivos descargados</div>`;

              // Use the updateLocalPdfsInfo function from rentasretenciones.js
              if (typeof window.updateLocalPdfsInfo === 'function') {
                window.updateLocalPdfsInfo(data2.downloaded_files);
              } else {
                // Fallback if function is not available
                const pdfMap = {};
                data2.downloaded_files.forEach(file => {
                  const filename = file.split('\\').pop();
                  pdfMap[filename] = file;
                });

                // Save to localStorage
                try {
                  localStorage.setItem('downloadedRetentionPdfs', JSON.stringify(pdfMap));
                  statusMessages.innerHTML += `<div class="alert alert-info">Información de PDFs guardada localmente</div>`;
                } catch (e) {
                  console.error("Error saving PDFs to storage", e);
                }
              }

              // Trigger a data refresh to update PDF paths
              window.rentasFetchData();
            }

            progressBarFill.style.width = '100%';

            // Update step icon
            document.querySelector('#step3 .step-icon').style.backgroundColor = '#28a745';
            document.querySelector('#step3 .step-icon').style.borderColor = '#28a745';
            document.querySelector('#step3 .step-icon').style.color = 'white';

            // Close modal after success
            setTimeout(() => {
              $('#modal-api3').modal('hide');
              executeBtn.disabled = false;
              executeBtn.textContent = 'Ejecutar';
              progressBar.style.display = 'none';
              statusMessages.style.display = 'none';
            }, 3000);

          } catch (error) {
            console.error('Error:', error);
            statusMessages.innerHTML += `<div class="alert alert-danger">Error: ${error.message}</div>`;
            executeBtn.disabled = false;
          }
        }
      </script>
</body>
</html>