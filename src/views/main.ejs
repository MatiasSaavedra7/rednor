<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Rednor</title>
  <%- include('./partials/AdminLTEHead.ejs') %>
</head>
<body class="hold-transition sidebar-mini dark-mode">
<div class="wrapper">

  <!-- Preloader -->
  <div class="preloader flex-column justify-content-center align-items-center">
    <img class="animation__wobble" src="/img/RednorLogo.png" alt="Rednor Logo">
  </div>

  <!-- Navbar -->
  <%- include('./partials/navbar') %>

  <!-- Main Sidebar Container -->
  <%- include('./partials/mainSidebar') %>

  <!-- Control Sidebar -->
  <%- include('./partials/controlSidebar') %>
  

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
            <h1 class="m-0">Starter Page</h1>
          </div>
        </div>
      </div>
    </div>

    <!-- Main content -->
    <div class="content">
      <div class="container-fluid">
        <div class="row">
          <div class="col-lg-12">
            <div class="card" id="notificaciones-card">
              <div class="card-header">
                <h3 class="card-title font-weight-bold">Ultimas notificaciones</h3>
              </div>

              <div class="card-body">
                <div class="table-responsive">
                  <table class="table table-sm table-hover" id="notificaciones-table">
                    <!-- Header -->
                    <thead>
                      <tr>
                        <!-- <th>ID</th> -->
                        <th>Titulo</th>
                        <th>Mensaje</th>
                        <th>Fecha</th>
                      </tr>
                    </thead>
                    <!-- Body -->
                    <tbody>
                      <tr>
                        <!-- <td>1</td> -->
                        <td>Titulo 1</td>
                        <td>Mensaje 1</td>
                        <td>Fecha 1</td>
                      </tr>
                    </tbody>
                  </table>
                </div>
                <div class="d-flex justify-content-center gap-3">
                  <button class="btn btn-sm btn-primary mr-2" id="cargar-mas-btn">&laquo;</button>

                  <button class="btn btn-sm btn-primary ml-2" id="volver-atras-btn">&raquo;</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="row">
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">Card title</h5>

                <p class="card-text">
                  Some quick example text to build on the card title and make up the bulk of the card's
                  content.
                </p>

                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
              </div>
            </div>
            
            <p>
              Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis magni culpa omnis officiis vero dolor, labore reiciendis dignissimos quisquam ratione soluta laudantium fuga eligendi nesciunt sequi numquam mollitia dolores minus?
            </p>
            <div class="card card-primary card-outline">
              <div class="card-body">
                <h5 class="card-title">Card title</h5>

                <p class="card-text">
                  Some quick example text to build on the card title and make up the bulk of the card's
                  content.
                </p>
                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
              </div>
            </div><!-- /.card -->
          </div>

          <div class="col-lg-6">
            <div class="card">
              <div class="card-header">
                <h5 class="m-0">Featured</h5>
              </div>
              <div class="card-body">
                <h6 class="card-title">Special title treatment</h6>

                <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
              </div>
            </div>

            <div class="card card-primary card-outline">
              <div class="card-header">
                <h5 class="m-0">Featured</h5>
              </div>
              <div class="card-body">
                <h6 class="card-title">Special title treatment</h6>

                <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<!-- REQUIRED SCRIPTS -->
<%- include('./partials/AdminLTEScripts.ejs') %>
<!-- Script Notificaciones -->
<script>
  document.addEventListener("DOMContentLoaded", async () => {
    // Card Notificaciones
    const notificacionesCard = document.getElementById("notificaciones-card");
    // Tabla de notificaciones
    const notificacionesTable = document.getElementById("notificaciones-table");
    // Boton para cargar mas notificaciones
    const cargarMasBtn = document.getElementById("cargar-mas-btn");
    // Boton para volver atras en las notificaciones
    const volverAtrasBtn = document.getElementById("volver-atras-btn");

    // Paginado de notificaciones
    const limit = 5;      // Limite de notificaciones por pagina
    let currentPage = 1;  // Primer pagina
    let totalPages = 0;   // Total de paginas

    const fetchNotificaciones = async (limit, offset) => {
      try {
        const response = await fetch(`/notificaciones?limit=${limit}&offset=${offset}`);

        if (!response.ok) {
          throw new Error("Error fetching data notificaciones");
        };

        return await response.json();
      } catch (error) {
        console.error(error);
      }
    };

    const mostrarNotificaciones = (notificaciones) => {
      const notificacionesBody = notificacionesTable.querySelector("tbody");

      let options = {
        day: "numeric",
        month: "long",
        year: "numeric",
        hour: "numeric",
        minute: "numeric",
        hour12: false,
      }
      
      // Limpiar el contenido anterior
      notificacionesBody.innerHTML = "";

      notificaciones.forEach(notificacion => {
        // Crear una nueva fila
        const tr = document.createElement("tr");

        // Agregar el nuevo contenido
        tr.innerHTML += `
          <td>${notificacion.titulo}</td>
          <td><a href="${notificacion.url}" class="text-white text-decoration-none">${notificacion.mensaje}</a></td>
          <td>${new Date(notificacion.fecha).toLocaleString("es-ES", options)}</td>
        `;

        // Agregar la nueva fila a la tabla
        notificacionesBody.appendChild(tr);
      });
    };

    const cargarNotificaciones = async () => {
      const offset = (currentPage - 1) * limit;
      const data = await fetchNotificaciones(limit, offset);
      console.log("Notificaciones: ", data);
      if (data) {
        // Si no hay notificaciones, mostrar un mensaje
        if (data.notifications.length == 0) {
          // Seleccionar el body de la card de notificaciones
          const notificacionesCardBody = notificacionesCard.querySelector(".card-body");
          // Limpiar el contenido anterior
          notificacionesCardBody.innerHTML = "";
          // Crear un nuevo parrafo
          const p = document.createElement("p");
          p.textContent = "No hay notificaciones";
          p.classList.add("text-center");
          notificacionesCardBody.appendChild(p);
          return;
        }
        // Mostrar las notificaciones, se encuentran en data.notifications
        mostrarNotificaciones(data.notifications)
        totalPages = data.totalPages;
        verificarBotones();
      };
    };
    
    // Cargar las siguientes 5 notificaciones
    const cargarPaginaSiguiente = async () => {
      if (currentPage < totalPages) {
        currentPage++;
        await cargarNotificaciones();
      }
    };

    // Volver a las anteriores 5 notificaciones
    const cargarPaginaAnterior = async () => {
      if (currentPage > 1) {
        currentPage--;
        await cargarNotificaciones();
      };
    };
    
    const verificarBotones = () => {
      cargarMasBtn.disabled = currentPage >= totalPages;
      volverAtrasBtn.disabled = currentPage <= 1;
    }

    // Cargar las primeras 5 notificaciones al cargar la pÃ¡gina.
    await cargarNotificaciones();

    // Cargar mas notificaciones al hacer click en el boton
    cargarMasBtn.addEventListener("click", async () => {
      await cargarPaginaSiguiente();
    });

    volverAtrasBtn.addEventListener("click", async () => {
      await cargarPaginaAnterior();
    })
  })
</script>
</body>
</html>