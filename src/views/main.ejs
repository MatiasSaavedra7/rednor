<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Rednor</title>
  <%- include('./partials/AdminLTEHead.ejs') %>
</head>
<style>
  /* Ocultar el radio button original */
  input[type="radio"] {
      display: none;
  }

  /* Estilo personalizado */
  input[type="radio"] + label {
      display: flex;
      align-items: center;
      gap: 10px;
      padding: 12px 20px;
      border: 2px solid #4CAF50;
      border-radius: 10px;
      font-size: 20px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease-in-out;
  }

  /* Radio button no seleccionado */
  input[type="radio"] + label {
      background-color: #f0f0f0;
      color: #333;
  }

  /* Radio button seleccionado */
  input[type="radio"]:checked + label {
      background-color: #4CAF50;
      color: white;
      border-color: #388E3C;
      box-shadow: 0 0 10px rgba(72, 175, 80, 0.5);
  }

  /* Efecto hover */
  input[type="radio"] + label:hover {
      background-color: #388E3C;
      color: white;
  }
</style>
<body class="hold-transition sidebar-mini dark-mode">
<div class="wrapper">

  <!-- Preloader -->
  <div class="preloader flex-column justify-content-center align-items-center">
    <img class="animation__wobble" src="/img/RednorLogo.png" alt="Rednor Logo">
  </div>

  <!-- Navbar -->
  <%- include('./partials/navbar') %>

  <!-- Main Sidebar Container -->
  <%- include('./partials/mainSidebar') %>

  <!-- Control Sidebar -->
  <%- include('./partials/controlSidebar') %>
  

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">

    <!-- Content Header (Page header) -->
    <div class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
            <div class="d-flex align-items-end">
              <h1 class="" id="titulo-inicio">
                Inicio
              </h1>
              <a href="#" class="ml-2" data-toggle="modal" data-target="#modal-firma">Cambiar</a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main content -->
    <div class="content">
      <div class="container-fluid">

        
        <!-- Fila / Small boxes -->
        <div class="row">

          <!-- Columna Equipos -->
          <div class="col-lg-3 col-6">
            <!-- Small box -->
            <div class="small-box bg-info">
              <div class="inner">
                <h3 id="totalEquipos">00</h3>

                <p>Equipos</p>
              </div>
              <div class="icon">
                <i class="fas fa-print"></i>
              </div>
              <a href="/equipos" class="small-box-footer">Mas info <i class="fas fa-arrow-circle-right"></i></a>
            </div>
          </div>
          
          <!-- Columna Clientes -->
          <div class="col-lg-3 col-6">
            <!-- Small box -->
            <div class="small-box bg-success">
              <div class="inner">
                <h3 id="totalClientes">00</h3>

                <p>Clientes</p>
              </div>
              <div class="icon">
                <i class="fas fa-users"></i>
              </div>
              <a href="/clientes" class="small-box-footer">Mas info <i class="fas fa-arrow-circle-right"></i></a>
            </div>
          </div>

          <!-- Columna Alquileres -->
          <div class="col-lg-3 col-6">
            <!-- Small box -->
            <div class="small-box bg-warning">
              <div class="inner">
                <h3 id="totalAlquileres">00</h3>

                <p>Alquileres</p>
              </div>
              <div class="icon">
                <i class="fas fa-file-signature"></i>
              </div>
              <a href="/alquileres" class="small-box-footer">Mas info <i class="fas fa-arrow-circle-right"></i></a>
            </div>
          </div>

          <!-- Columna Equipos en Taller -->
          <div class="col-lg-3 col-6">
            <!-- Small box -->
            <div class="small-box bg-danger">
              <div class="inner">
                <h6 id="totalEquiposEnTallerInternos">00</h6>
                <h6 id="totalEquiposEnTallerExternos">00 <sub>Externos</sub></h6>

                <p class="p-0">Equipos en Taller</p>
              </div>
              <div class="icon">
                <i class="fas fa-tools"></i>
              </div>
              <a href="/taller" class="small-box-footer">Mas info <i class="fas fa-arrow-circle-right"></i></a>
            </div>
          </div>
        </div>

        <!-- Notificaciones -->
        <div class="row">
          <div class="col-lg-12">
            <div class="card" id="notificaciones-card">
              <div class="card-header">
                <h3 class="card-title font-weight-bold">Ultimas notificaciones</h3>
              </div>

              <div class="card-body">
                <div class="table-responsive">
                  <table class="table table-sm table-hover" id="notificaciones-table">
                    <!-- Header -->
                    <thead>
                      <tr>
                        <!-- <th>ID</th> -->
                        <th>Titulo</th>
                        <th>Mensaje</th>
                        <th>Fecha</th>
                      </tr>
                    </thead>
                    <!-- Body -->
                    <tbody>
                      <tr>
                        <!-- <td>1</td> -->
                        <td>Titulo 1</td>
                        <td>Mensaje 1</td>
                        <td>Fecha 1</td>
                      </tr>
                    </tbody>
                  </table>
                </div>
                <div class="d-flex justify-content-center gap-3">
                  <button class="btn btn-sm btn-primary mr-2" id="cargar-mas-btn">&laquo;</button>

                  <button class="btn btn-sm btn-primary ml-2" id="volver-atras-btn">&raquo;</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="row">
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">Card title</h5>

                <p class="card-text">
                  Some quick example text to build on the card title and make up the bulk of the card's
                  content.
                </p>

                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
              </div>
            </div>
            
            <p>
              Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis magni culpa omnis officiis vero dolor, labore reiciendis dignissimos quisquam ratione soluta laudantium fuga eligendi nesciunt sequi numquam mollitia dolores minus?
            </p>
            <div class="card card-primary card-outline">
              <div class="card-body">
                <h5 class="card-title">Card title</h5>

                <p class="card-text">
                  Some quick example text to build on the card title and make up the bulk of the card's
                  content.
                </p>
                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
              </div>
            </div><!-- /.card -->
          </div>

          <div class="col-lg-6">
            <div class="card">
              <div class="card-header">
                <h5 class="m-0">Featured</h5>
              </div>
              <div class="card-body">
                <h6 class="card-title">Special title treatment</h6>

                <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
              </div>
            </div>

            <div class="card card-primary card-outline">
              <div class="card-header">
                <h5 class="m-0">Featured</h5>
              </div>
              <div class="card-body">
                <h6 class="card-title">Special title treatment</h6>

                <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>

  <!-- Modal para seleccionar la firma (Rednor/Servishar) -->
  <div class="modal fade" id="modal-firma">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <div class="modal-title">Firmas</div>
          <!-- <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button> -->
        </div>

        <div class="modal-body">
          <p style="font-size: 18px;">Seleccionar una firma: </p>
          <div id="firmas-container" class="d-flex justify-content-around">
            <!--  Aqui se generaran dinamicamente las opciones  -->
          </div>
        </div>
      </div>
    </div>
  </div>
  
</div>

<!-- REQUIRED SCRIPTS -->
<%- include('./partials/AdminLTEScripts.ejs') %>

<!-- Script para configurar la cookie de la firma -->
<script>
  document.addEventListener("DOMContentLoaded", async function() {
    // Titulo de la Pagina Principal
    const tituloInicio = document.getElementById("titulo-inicio");

    // Modal Firma
    const firmasContainer = document.getElementById("firmas-container");
    const modalFirma = document.getElementById("modal-firma");
    
    // Small Boxes
    const totalEquiposBox = document.getElementById("totalEquipos");
    const totalClientesBox = document.getElementById("totalClientes");
    const totalAlquileresBox = document.getElementById("totalAlquileres");
    const totalEquiposEnTallerInternos = document.getElementById("totalEquiposEnTallerInternos");
    const totalEquiposEnTallerExternos = document.getElementById("totalEquiposEnTallerExternos");

    // Función para obtener la cookie
    function getCookie(name) {
      let matches = document.cookie.match(new RegExp(`(^| )${name}=([^;]*)`));
      return matches ? matches[2] : null;
    }

    // Función para establecer la cookie
    function setCookie(name, value, hours) {
      let expires = "";
      if (hours) {
        let date = new Date();
        date.setTime(date.getTime() + hours * 60 * 60 * 1000);
        expires = "; expires=" + date.toUTCString();
      }
      document.cookie = name + "=" + value + "; path=/" + expires;
    }

    // Función Fetch
    async function fetchData(url) {
      try {
        const response = await fetch(url);

        if (!response.ok) {
          throw new Error("Error fetching data");
        };

        const data = await response.json();

        return data;
      } catch (error) {
        console.error("Error fetching data: ", error.message);
        
        return null;
      }
    }

    async function updateSmallBoxes() {
      const totalClientes = await fetchData("/clientes/api/count");

      if (totalClientes) {
        totalClientesBox.textContent = totalClientes.total;
      };

      const totalEquipos = await fetchData("/equipos/api/count");

      if (totalEquipos) {
        totalEquiposBox.textContent = totalEquipos.totalDisponibles;
        totalEquiposEnTallerInternos.innerHTML = `${totalEquipos.totalEnTaller} Internos`;
      };
      
      const totalTallerExterno = await fetchData("/taller/externos/count");

      console.log(totalTallerExterno);
      
      if (totalTallerExterno) {
        totalEquiposEnTallerExternos.innerHTML = `${totalTallerExterno.data.total} Externos`;
      }

      const totalAlquileres = await fetchData("/alquileres/api/count");

      if (totalAlquileres) {
        totalAlquileresBox.textContent = totalAlquileres.total;
      };
    }

    try {
      // Obtener firmas desde el backend
      const response = await fetch("/firmas");
      const firmas = await response.json();

      // Limpiar el contenedor antes de agregar opciones
      firmasContainer.innerHTML = "";

      const firmaSeleccionada = getCookie("firma");

      // Crear opciones de selección dinámicamente
      firmas.forEach(firma => {
        const formGroup = document.createElement("div");
        formGroup.classList.add("form-group");

        const input = document.createElement("input");
        input.type = "radio";
        input.name = "firma";
        input.value = firma.id;
        input.id = `firma-${firma.id}`;
        input.cursor = "pointer";


        // Preseleccionar la firma guardada
        if (firmaSeleccionada && firmaSeleccionada == firma.id) {
          input.checked = true;
        }

        const label = document.createElement("label");
        label.setAttribute("for", `firma-${firma.id}`);
        // label.style.fontSize = "28px";
        label.style.cursor = "pointer";
        label.textContent = `✔${firma.nombre}`;

        // Guardar selección y actualizar título
        input.addEventListener("change", async function() {
          setCookie("firma", firma.id, 1); // Expira en 1 hora
          tituloInicio.textContent = firma.nombre;
          $("#modal-firma").modal("hide");
          await updateSmallBoxes();
        });

        formGroup.appendChild(input);
        formGroup.appendChild(label);
        firmasContainer.appendChild(formGroup);
      });

      // Mostrar modal solo si no hay firma guardada
      if (!firmaSeleccionada) {
        $("#modal-firma").modal("show");
        await updateSmallBoxes();
      } else {
        tituloInicio.textContent = firmas.find(f => f.id == firmaSeleccionada)?.nombre || "Firma desconocida";
        await updateSmallBoxes();
      }
    } catch (error) {
      console.error("Error al cargar las firmas:", error);
    }
  });
</script>

<!-- Script Notificaciones -->
<script>
  document.addEventListener("DOMContentLoaded", async () => {
    // Card Notificaciones
    const notificacionesCard = document.getElementById("notificaciones-card");
    // Tabla de notificaciones
    const notificacionesTable = document.getElementById("notificaciones-table");
    // Boton para cargar mas notificaciones
    const cargarMasBtn = document.getElementById("cargar-mas-btn");
    // Boton para volver atras en las notificaciones
    const volverAtrasBtn = document.getElementById("volver-atras-btn");

    // Paginado de notificaciones
    const limit = 5;      // Limite de notificaciones por pagina
    let currentPage = 1;  // Primer pagina
    let totalPages = 0;   // Total de paginas

    const fetchNotificaciones = async (limit, offset) => {
      try {
        const response = await fetch(`/notificaciones?limit=${limit}&offset=${offset}`);

        if (!response.ok) {
          throw new Error("Error fetching data notificaciones");
        };

        return await response.json();
      } catch (error) {
        console.error(error);
      }
    };

    const mostrarNotificaciones = (notificaciones) => {
      const notificacionesBody = notificacionesTable.querySelector("tbody");

      let options = {
        day: "numeric",
        month: "long",
        year: "numeric",
        hour: "numeric",
        minute: "numeric",
        hour12: false,
      }
      
      // Limpiar el contenido anterior
      notificacionesBody.innerHTML = "";

      notificaciones.forEach(notificacion => {
        // Crear una nueva fila
        const tr = document.createElement("tr");

        // Agregar el nuevo contenido
        tr.innerHTML += `
          <td>${notificacion.titulo}</td>
          <td><a href="${notificacion.url}" class="text-white text-decoration-none">${notificacion.mensaje}</a></td>
          <td>${new Date(notificacion.fecha).toLocaleString("es-ES", options)}</td>
        `;

        // Agregar la nueva fila a la tabla
        notificacionesBody.appendChild(tr);
      });
    };

    const cargarNotificaciones = async () => {
      const offset = (currentPage - 1) * limit;
      const data = await fetchNotificaciones(limit, offset);
      // console.log("Notificaciones: ", data);
      if (data) {
        // Si no hay notificaciones, mostrar un mensaje
        if (data.notifications.length == 0) {
          // Seleccionar el body de la card de notificaciones
          const notificacionesCardBody = notificacionesCard.querySelector(".card-body");
          // Limpiar el contenido anterior
          notificacionesCardBody.innerHTML = "";
          // Crear un nuevo parrafo
          const p = document.createElement("p");
          p.textContent = "No hay notificaciones";
          p.classList.add("text-center");
          notificacionesCardBody.appendChild(p);
          return;
        }
        // Mostrar las notificaciones, se encuentran en data.notifications
        mostrarNotificaciones(data.notifications)
        totalPages = data.totalPages;
        verificarBotones();
      };
    };
    
    // Cargar las siguientes 5 notificaciones
    const cargarPaginaSiguiente = async () => {
      if (currentPage < totalPages) {
        currentPage++;
        await cargarNotificaciones();
      }
    };

    // Volver a las anteriores 5 notificaciones
    const cargarPaginaAnterior = async () => {
      if (currentPage > 1) {
        currentPage--;
        await cargarNotificaciones();
      };
    };
    
    const verificarBotones = () => {
      cargarMasBtn.disabled = currentPage >= totalPages;
      volverAtrasBtn.disabled = currentPage <= 1;
    }

    // Cargar las primeras 5 notificaciones al cargar la página.
    await cargarNotificaciones();

    // Cargar mas notificaciones al hacer click en el boton
    cargarMasBtn.addEventListener("click", async () => {
      await cargarPaginaSiguiente();
    });

    volverAtrasBtn.addEventListener("click", async () => {
      await cargarPaginaAnterior();
    })
  })
</script>
</body>
</html>